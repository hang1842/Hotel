// <auto-generated />
using System;
using Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Migrations
{
    [DbContext(typeof(HotelContext))]
    [Migration("20231004142456_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Models.Booking", b =>
                {
                    b.Property<int>("bookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("bookID"));

                    b.Property<int>("CarPark")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemID")
                        .HasColumnType("int");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("room_Quantity1")
                        .HasColumnType("int");

                    b.Property<int>("room_Quantity2")
                        .HasColumnType("int");

                    b.Property<int>("room_Quantity3")
                        .HasColumnType("int");

                    b.Property<string>("room_Type1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("room_Type2")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("room_Type3")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("bookID");

                    b.HasIndex("MemID");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            bookID = 1,
                            CarPark = 2,
                            CheckInTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1998),
                            CheckOutTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(1991),
                            MemID = 1,
                            ReferenceNumber = "IN20220123001",
                            room_Quantity1 = 1,
                            room_Quantity2 = 2,
                            room_Quantity3 = 0,
                            room_Type1 = "Single",
                            room_Type2 = "Two Bedrooms",
                            room_Type3 = "null"
                        },
                        new
                        {
                            bookID = 2,
                            CarPark = 1,
                            CheckInTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2009),
                            CheckOutTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified).AddTicks(2005),
                            MemID = 2,
                            ReferenceNumber = "IN20231004005",
                            room_Quantity1 = 1,
                            room_Quantity2 = 0,
                            room_Quantity3 = 0,
                            room_Type1 = "Two Bedrooms",
                            room_Type2 = "null",
                            room_Type3 = "null"
                        });
                });

            modelBuilder.Entity("Hotel.Models.BusinessService", b =>
                {
                    b.Property<int>("BS_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BS_ID"));

                    b.Property<string>("BS_Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BS_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("BS_Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("BS_Rate")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("BS_ID");

                    b.ToTable("BusinessService");

                    b.HasData(
                        new
                        {
                            BS_ID = 1,
                            BS_Description = "Guests can order and deliver meals to their rooms.",
                            BS_Name = "Customized Breakfast",
                            BS_Price = 20m,
                            BS_Rate = 1m
                        },
                        new
                        {
                            BS_ID = 2,
                            BS_Description = "Dry clean clothes for guests, iron them and deliver them to guest rooms.",
                            BS_Name = "Dry-clean Services",
                            BS_Price = 20m,
                            BS_Rate = 1m
                        });
                });

            modelBuilder.Entity("Hotel.Models.CheckIn", b =>
                {
                    b.Property<int>("CheckId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("guestID")
                        .HasColumnType("int");

                    b.Property<decimal>("pre_payment_amount")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("pre_payment_method")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("roomID")
                        .HasColumnType("int");

                    b.HasKey("CheckId");

                    b.HasIndex("guestID");

                    b.HasIndex("roomID");

                    b.ToTable("CheckIn");

                    b.HasData(
                        new
                        {
                            CheckId = 1,
                            CheckInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            guestID = 1,
                            pre_payment_amount = 150m,
                            pre_payment_method = "Credit Card",
                            roomID = 2
                        },
                        new
                        {
                            CheckId = 2,
                            CheckInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            guestID = 2,
                            pre_payment_amount = 150m,
                            pre_payment_method = "Credit Card",
                            roomID = 1
                        });
                });

            modelBuilder.Entity("Hotel.Models.Consumption", b =>
                {
                    b.Property<int>("con_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("con_ID"));

                    b.Property<int>("BS_ID")
                        .HasColumnType("int");

                    b.Property<int>("Service_Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("con_Amount")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("guestID")
                        .HasColumnType("int");

                    b.HasKey("con_ID");

                    b.HasIndex("BS_ID");

                    b.HasIndex("guestID");

                    b.ToTable("Consumption");

                    b.HasData(
                        new
                        {
                            con_ID = 1,
                            BS_ID = 1,
                            Service_Quantity = 2,
                            con_Amount = 40m,
                            guestID = 1
                        },
                        new
                        {
                            con_ID = 2,
                            BS_ID = 2,
                            Service_Quantity = 1,
                            con_Amount = 50m,
                            guestID = 2
                        });
                });

            modelBuilder.Entity("Hotel.Models.Department", b =>
                {
                    b.Property<int>("de_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("de_ID"));

                    b.Property<string>("de_Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("de_ID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            de_ID = 1,
                            de_Name = "Customer Service Department"
                        },
                        new
                        {
                            de_ID = 2,
                            de_Name = "IT Department"
                        },
                        new
                        {
                            de_ID = 3,
                            de_Name = "Engineering Department"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Guest", b =>
                {
                    b.Property<int>("GuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GuestID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Hometown")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Preference")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GuestID");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            GuestID = 1,
                            Email = "quentin@guest.com",
                            FName = "Quentin",
                            Gender = "Male",
                            Hometown = "Christchurch",
                            ID = "025467895",
                            LName = "Jim",
                            Organization = "Individual",
                            Phone = "02146578",
                            Preference = "Adventure"
                        },
                        new
                        {
                            GuestID = 2,
                            Email = "alison@guest.com",
                            FName = "Alison",
                            Gender = "Female",
                            Hometown = "Queenstown",
                            ID = "025467858",
                            LName = "Jim",
                            Organization = "SIT",
                            Phone = "0256487",
                            Preference = "Music"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Member", b =>
                {
                    b.Property<int>("MemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Organization")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MemID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemID = 1,
                            Address = "150 Eye Street, Invercargill",
                            Category = "Bronze",
                            Email = "alfred@member.com",
                            FName = "Alfred",
                            Gender = "Male",
                            LName = "Ben",
                            Organization = "Individual",
                            Password = "Alfred12345",
                            Phone = "0236547"
                        },
                        new
                        {
                            MemID = 2,
                            Address = "1260 Eye Street, Christchurch",
                            Category = "Gold",
                            Email = "aditi@member.com",
                            FName = "Aditi",
                            Gender = "Female",
                            LName = "Agatha",
                            Organization = "SIT",
                            Password = "Aditi12345",
                            Phone = "0236556"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Payment", b =>
                {
                    b.Property<int>("payment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("payment_ID"));

                    b.Property<int>("Accommodation_days")
                        .HasColumnType("int");

                    b.Property<decimal>("Consumption_Charges")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("create_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("guestID")
                        .HasColumnType("int");

                    b.Property<DateTime>("paid_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("pay_method")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal>("payment_Amount")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)");

                    b.Property<decimal>("payment_Rate")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.HasKey("payment_ID");

                    b.HasIndex("guestID");

                    b.ToTable("Payment");

                    b.HasData(
                        new
                        {
                            payment_ID = 1,
                            Accommodation_days = 5,
                            Consumption_Charges = 45m,
                            create_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            guestID = 1,
                            paid_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pay_method = "Cash",
                            payment_Amount = 250m,
                            payment_Rate = 1m
                        },
                        new
                        {
                            payment_ID = 2,
                            Accommodation_days = 0,
                            Consumption_Charges = 0m,
                            create_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            guestID = 2,
                            paid_date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pay_method = "Pending",
                            payment_Amount = 0m,
                            payment_Rate = 1m
                        });
                });

            modelBuilder.Entity("Hotel.Models.Room", b =>
                {
                    b.Property<int>("room_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("room_ID"));

                    b.Property<string>("room_Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("room_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("room_Price")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.Property<decimal>("room_Rate")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("room_Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("room_Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("room_number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("room_ID");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            room_ID = 1,
                            room_Description = "Sleeps 2,Free WiFi,Free self parking,36 sq m,1 King Bed",
                            room_Name = "Sunshine King",
                            room_Price = 168m,
                            room_Rate = 1m,
                            room_Status = "Avacant Clean",
                            room_Type = "Single",
                            room_number = "C-23"
                        },
                        new
                        {
                            room_ID = 2,
                            room_Description = "Sleeps 2,Free WiFi,Free self parking,60 sq m,1 Twin Bed",
                            room_Name = "Sunshine Twin",
                            room_Price = 185m,
                            room_Rate = 1m,
                            room_Status = "Occupied Clean",
                            room_Type = "Two Bedrooms",
                            room_number = "B-32"
                        });
                });

            modelBuilder.Entity("Hotel.Models.RoomService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("staffID")
                        .HasColumnType("int");

                    b.HasKey("ServiceId");

                    b.HasIndex("RoomID");

                    b.HasIndex("staffID");

                    b.ToTable("RoomService");

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            RoomID = 1,
                            Status = "Execeting",
                            Type = "Clear",
                            staffID = 1
                        },
                        new
                        {
                            ServiceId = 2,
                            RoomID = 1,
                            Status = "Execeting",
                            Type = "Maintenance",
                            staffID = 1
                        });
                });

            modelBuilder.Entity("Hotel.Models.Staff", b =>
                {
                    b.Property<int>("staff_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("staff_ID"));

                    b.Property<int>("de_ID")
                        .HasColumnType("int");

                    b.Property<string>("staff_Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("staff_Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("staff_FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("staff_Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("staff_LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("staff_Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("staff_Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("staff_Position")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("staff_ID");

                    b.HasIndex("de_ID");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            staff_ID = 1,
                            de_ID = 3,
                            staff_Address = "120 Wilfrid Street",
                            staff_Email = "ben@kousekeeper.com",
                            staff_FName = "Ben",
                            staff_Gender = "Male",
                            staff_LName = "Cary",
                            staff_Password = "Ben12345",
                            staff_Phone = "02156941",
                            staff_Position = "Manager"
                        },
                        new
                        {
                            staff_ID = 2,
                            de_ID = 1,
                            staff_Address = "120 Hardy Street",
                            staff_Email = "becky@kousekeeper.com",
                            staff_FName = "Becky",
                            staff_Gender = "Female",
                            staff_LName = "Dolly",
                            staff_Password = "Becky12345",
                            staff_Phone = "02156941",
                            staff_Position = "HouseKeeper"
                        },
                        new
                        {
                            staff_ID = 3,
                            de_ID = 2,
                            staff_Address = "120 Hamilton Street",
                            staff_Email = "brandon@kousekeeper.com",
                            staff_FName = "Brandon",
                            staff_Gender = "Male",
                            staff_LName = "Dick",
                            staff_Password = "Brandon12345",
                            staff_Phone = "02156941",
                            staff_Position = "Adminstrator"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Booking", b =>
                {
                    b.HasOne("Hotel.Models.Member", "member")
                        .WithMany("bookings")
                        .HasForeignKey("MemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("member");
                });

            modelBuilder.Entity("Hotel.Models.CheckIn", b =>
                {
                    b.HasOne("Hotel.Models.Guest", "guest")
                        .WithMany("checkins")
                        .HasForeignKey("guestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Room", "room")
                        .WithMany("checkIns")
                        .HasForeignKey("roomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("guest");

                    b.Navigation("room");
                });

            modelBuilder.Entity("Hotel.Models.Consumption", b =>
                {
                    b.HasOne("Hotel.Models.BusinessService", "service")
                        .WithMany("consumption")
                        .HasForeignKey("BS_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Guest", "guest")
                        .WithMany("consumptions")
                        .HasForeignKey("guestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("guest");

                    b.Navigation("service");
                });

            modelBuilder.Entity("Hotel.Models.Payment", b =>
                {
                    b.HasOne("Hotel.Models.Guest", "guest")
                        .WithMany()
                        .HasForeignKey("guestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("guest");
                });

            modelBuilder.Entity("Hotel.Models.RoomService", b =>
                {
                    b.HasOne("Hotel.Models.Room", "Room")
                        .WithMany("roomService")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Models.Staff", "Staff")
                        .WithMany("roomService")
                        .HasForeignKey("staffID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Hotel.Models.Staff", b =>
                {
                    b.HasOne("Hotel.Models.Department", "department")
                        .WithMany("staffs")
                        .HasForeignKey("de_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("Hotel.Models.BusinessService", b =>
                {
                    b.Navigation("consumption");
                });

            modelBuilder.Entity("Hotel.Models.Department", b =>
                {
                    b.Navigation("staffs");
                });

            modelBuilder.Entity("Hotel.Models.Guest", b =>
                {
                    b.Navigation("checkins");

                    b.Navigation("consumptions");
                });

            modelBuilder.Entity("Hotel.Models.Member", b =>
                {
                    b.Navigation("bookings");
                });

            modelBuilder.Entity("Hotel.Models.Room", b =>
                {
                    b.Navigation("checkIns");

                    b.Navigation("roomService");
                });

            modelBuilder.Entity("Hotel.Models.Staff", b =>
                {
                    b.Navigation("roomService");
                });
#pragma warning restore 612, 618
        }
    }
}
